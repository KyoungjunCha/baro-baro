<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--  interface UserMapper.java를 사용할 경우 -->
<mapper namespace="com.barobaro.app.mapper.ChatMapper">

	 <!-- ChatRoomVO 매핑 -->
  <resultMap id="ChatRoomResultMap" type="com.barobaro.app.vo.ChatRoomVO">
    <id property="chatRoomSeq" column="CHAT_ROOM_SEQ"/>
    <result property="regdate" column="REGDATE"/>
    <result property="userSeq" column="user_seq"/>
    <result property="userNickName" column="user_nickName"/>
    <result property="profileImage" column="profile_image"/>
  </resultMap>

  <!-- ChatMessageVO 매핑 -->
  <resultMap id="ChatMessageResultMap" type="com.barobaro.app.vo.ChatMessageVO">
    <id property="chatMessageSeq" column="CHAT_MESSAGE_SEQ"/>
    <result property="chatRoomSeq" column="CHAT_ROOM_SEQ"/>
    <result property="sender" column="SENDER"/>
    <result property="content" column="CONTENT"/>
    <result property="regdate" column="REGDATE"/>
  </resultMap>

  <!-- 채팅 메시지 INSERT -->
  <insert id="insertChatMessage">
    INSERT INTO CHAT_MESSAGE (CHAT_MESSAGE_SEQ, CHAT_ROOM_SEQ, SENDER, CONTENT, REGDATE)
    VALUES (CHAT_MESSAGE_SEQ.NEXTVAL, #{chatRoomSeq}, #{sender}, #{content}, SYSDATE)
  </insert>

	<!-- 특정 채팅방의 메시지 목록 SELECT -->
	<select id="selectMessagesByRoomSeq" resultMap="ChatMessageResultMap">
	    SELECT CHAT_MESSAGE_SEQ, CHAT_ROOM_SEQ, SENDER, CONTENT, REGDATE
	    	FROM CHAT_MESSAGE
	    WHERE CHAT_ROOM_SEQ = #{roomSeq}
		ORDER BY CHAT_MESSAGE_SEQ
	</select>
	<select id="findChatRoomByUsers" resultMap="ChatRoomResultMap">
		SELECT CHAT_ROOM_SEQ, REGDATE
		FROM CHAT_ROOM
		WHERE CHAT_ROOM_SEQ IN (
			SELECT CHAT_ROOM_SEQ 
			FROM chat_room_member
			WHERE JOIN_USER_SEQ IN (#{senderSeq}, #{targetUserSeq})
			GROUP BY CHAT_ROOM_SEQ
			HAVING COUNT(1) >= 2
		)
	</select>
	
  	<!-- 채팅방 생성 -->
  	<insert id="createRoom" parameterType="com.barobaro.app.vo.ChatRoomVO">
	    <selectKey keyProperty="chatRoomSeq" resultType="long" order="AFTER"> 
			select chat_room_seq.currval as chatRoomSeq from dual
		</selectKey>
	    INSERT INTO CHAT_ROOM (CHAT_ROOM_SEQ, REGDATE)
	    VALUES (CHAT_ROOM_SEQ.NEXTVAL, SYSDATE)
  	</insert>
  	<insert id="createRoomMember">
  		INSERT INTO chat_room_member
  		VALUES (chat_room_member_seq.NEXTVAL, #{userSeq}, SYSDATE, #{chatRoomSeq})
  	</insert>
  
 	<!-- 채팅방 목록 -->
  	<select id="getRoomsByUserSeq" resultMap="ChatRoomResultMap">
		SELECT st1.*, st2.*
		FROM
	        (SELECT 
		    	CHAT_ROOM_SEQ, REGDATE
		    FROM 
		    	CHAT_ROOM
		    WHERE 
		    	CHAT_ROOM_SEQ IN (
			    	SELECT CHAT_ROOM_SEQ
					FROM CHAT_ROOM_MEMBER
					WHERE JOIN_USER_SEQ = #{userSeq}
			)) st1 LEFT OUTER JOIN 
	   		(
	   			SELECT CHAT_ROOM_SEQ, SENDER, CONTENT, REGDATE
                FROM (
                    SELECT CHAT_ROOM_SEQ, SENDER, CONTENT, REGDATE,
                           ROW_NUMBER() OVER (PARTITION BY CHAT_ROOM_SEQ ORDER BY REGDATE DESC) AS row_num
                    FROM CHAT_MESSAGE
                )
                WHERE row_num = 1
           ) st2 ON st1.CHAT_ROOM_SEQ = st2.CHAT_ROOM_SEQ
  	</select>
</mapper>


  
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.barobaro.app.mapper.ReservationMapper">

<!--  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 예약 히스토리 테이블 (RESERVATION_HISTORY) ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->

    <!-- 예약을 요청 상태(STATUS=1)로 등록 -->
    <insert id="requestReservation">
        INSERT INTO RESERVATION_HISTORY( RESERVATION_SEQ, CREATED_AT, UPDATED_AT, STATUS, TIME_SLOT_SEQ )
		VALUES ( RESERVATION_HISTORY_SEQ.NEXTVAL, SYSDATE, SYSDATE, 1, #{time_slot_seq} )
    </insert>
	
	<!-- 예약을 수락 상태(STATUS=2)로 변경 -->
	<update id="acceptReservation">
		UPDATE RESERVATION_HISTORY
		SET STATUS = 2, UPDATED_AT = SYSDATE
		WHERE RESERVATION_SEQ = #{reservation_seq}
    </update>
    
	<!-- 예약을 거절 상태(STATUS=3)로 변경 -->
	<update id="refuseReservation">
		UPDATE RESERVATION_HISTORY
		SET STATUS = 3, UPDATED_AT = SYSDATE
		WHERE RESERVATION_SEQ = #{reservation_seq}
	</update>
	
	<!-- 예약을 취소요청 상태(STATUS=4)로 변경 -->
	<update id="cancleRequest">
		UPDATE RESERVATION_HISTORY
		SET STATUS = 4, UPDATED_AT = SYSDATE
		WHERE RESERVATION_SEQ = #{reservation_seq}
	</update>
	
	<!-- 예약 취소요청 수락 상태(STATUS=5)로 변경 -->
	<update id="cancleAccept">
		UPDATE RESERVATION_HISTORY
		SET STATUS = 5, UPDATED_AT = SYSDATE
		WHERE RESERVATION_SEQ = #{reservation_seq}
	</update>

	
	<!-- 거래 완료 상태(STATUS=6)로 변경 -->
	<update id="done">
		UPDATE RESERVATION_HISTORY
		SET STATUS = 6, UPDATED_AT = SYSDATE
		WHERE RESERVATION_SEQ = #{reservation_seq}
	</update>
	
	<!-- 예약 취소요청 거절 상태(STATUS=7)로 변경 -->
	<update id="cancleReject">
		UPDATE RESERVATION_HISTORY
		SET STATUS = 7, UPDATED_AT = SYSDATE
		WHERE RESERVATION_SEQ = #{reservation_seq}
	</update>
    
    
<!--  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 대여타임 테이블 (RENT_TIME_SLOT) ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    
	<!-- 타임슬롯을 예약가능 상태(STATUS = 1)로 변경 -->
	<update id="updateStatusAvailableByReservationSeq">
			UPDATE RENT_TIME_SLOT
			SET STATUS = 1
			WHERE TIME_SLOT_SEQ = ( SELECT TIME_SLOT_SEQ
							        FROM RESERVATION_HISTORY
							        WHERE RESERVATION_SEQ = #{reservation_seq}
		    						)
	</update>
	
	<!-- 타임슬롯을 예약가능 상태(STATUS = 1)로 변경 -->
	<update id="updateStatusAvailableByTimeSlotSeq">
			UPDATE RENT_TIME_SLOT
			SET STATUS = 1
			WHERE TIME_SLOT_SEQ = #{time_slot_seq}
	</update>
	
	<!-- 타임슬롯을 예약 불가능 상태(STATUS = 2)로 변경 -->
    <update id="updateStatusUnavailable">
			UPDATE RENT_TIME_SLOT
			SET STATUS = 2
			WHERE TIME_SLOT_SEQ = #{time_slot_seq}
    </update>
    
<!--  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 목록 가져오기 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    
    <!-- 로그인유저가 등록한 물품의 타임목록 현황 가져오기 -->
    <select id="getAllTimeSlots" resultType="com.barobaro.app.vo.RentTimeSlotVO">
	        SELECT  rts.time_slot_seq,
			        rts.rent_at,
			        rts.return_at,
			        rts.price,
			        rts.regdate,
		            rts.rent_location,
		            rts.return_location,
		                  
			        p.post_seq,
			        p.title,
			        p.product_name,
			        p.item_content,
			        
			        rh.status,
			        rh.reservation_seq,
        
                 	-- 대여 물품 주인 (글 등록자) 정보
			        u.nickname AS owner_nickname,
			        u.user_seq AS owner_user_seq,
                 
	                -- Self Join으로 가져온 대여 요청자 정보
	                ut.nickname AS requestor_nickname,
	                ut.user_seq AS requestor_user_seq
			        
			FROM RENT_TIME_SLOT rts
			
			LEFT JOIN POST p 
                 	ON rts.post_seq = p.post_seq
                 
			LEFT JOIN RESERVATION_HISTORY rh 
                 	ON rts.TIME_SLOT_SEQ = rh.TIME_SLOT_SEQ
                    
			LEFT JOIN USER_TABLE u 
                 	ON rts.regid = u.nickname
            
            -- SELF JOIN 적용 (같은 RESERVATION_HISTORY 테이블을 두 개 사용)
            LEFT JOIN RESERVATION_HISTORY r  
                	ON rh.reservation_seq = r.reservation_seq  	-- 같은 예약인지 확인
                	
            LEFT JOIN USER_TABLE ut
                	ON r.user_seq = ut.user_seq  				-- 예약요청한 요청자 정보 가져오기     
			
            WHERE u.user_seq = #{userSeq}
			ORDER BY post_seq DESC, regdate DESC, reservation_seq DESC
    </select>
    
    <!-- 로그인유저가 예약한 내역 현황 가져오기 -->
    <select id="getAllReservation" resultType="com.barobaro.app.vo.RentTimeSlotVO">
			SELECT  rts.time_slot_seq,
			        rts.rent_at,
			        rts.return_at,
			        rts.price,
			        rts.regdate,
			        rts.rent_location,
			        rts.return_location,
			
			        p.post_seq,
			        p.title,
			        p.product_name,
			        p.item_content,
			
			        rh.status,
			        rh.reservation_seq,
			
			        -- 대여 물품 주인 (게시물 등록자) 정보
			        u.nickname AS owner_nickname,
			        u.user_seq AS owner_user_seq,
			
			        -- 대여 요청자 == 내 정보
			        ut.nickname AS requestor_nickname,
			        ut.user_seq AS requestor_user_seq
			
			FROM RESERVATION_HISTORY rh
			
			LEFT JOIN RENT_TIME_SLOT rts 
			    ON rh.time_slot_seq = rts.time_slot_seq
			
			LEFT JOIN POST p 
			    ON rts.post_seq = p.post_seq
			
			LEFT JOIN USER_TABLE u 
			    ON p.user_seq = u.user_seq  	-- 대여 물품 주인 (게시물 등록자) 정보 가져오기
			
			LEFT JOIN USER_TABLE ut
			    ON rh.user_seq = ut.user_seq  	-- 대여 요청자 정보 가져오기 (== 내가 요청자)
			
			WHERE rh.user_seq = #{userSeq}
			ORDER BY rh.reservation_seq DESC, rts.regdate DESC
    </select>
</mapper>